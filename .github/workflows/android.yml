name: Android Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build Debug APK
    runs-on: ubuntu-latest

    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17

    - name: Install Android SDK
      run: |
        mkdir -p $ANDROID_SDK_ROOT
        cd $ANDROID_SDK_ROOT
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
        unzip cmdline-tools.zip
        rm cmdline-tools.zip
        mkdir -p cmdline-tools
        mv cmdline-tools cmdline-tools/latest
        yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses
        $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.2"

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper/
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}-

    - name: Build Debug APK
      run: ./gradlew :app:assembleDebug --stacktrace
      env:
        ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
        PATH: ${{ github.workspace }}/android-sdk/platform-tools:${PATH}

    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: TrainingTimer-debug-apk
        path: app/build/outputs/apk/debug/app-debug.apk

